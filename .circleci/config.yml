version: 2.1
executors:
  node10:
    docker:
      - image: circleci/node:10-buster
        environment:
          NPM_CONFIG_PREFIX: "~/.npm-global"
    working_directory: ~/repo

orbs:
  helix-post-deploy: adobe/helix-post-deploy@1.10.0

commands:
  setup:
    steps:
      - checkout
      - restore_cache:
          keys:
            - v3-dependencies-{{ arch }}-{{ checksum "package-lock.json" }}
      - run:
          name: install latest npm
          command: sudo npm -g install npm
      - run:
          name: Installing Dependencies
          command: npm ci
      - save_cache:
          paths:
            - node_modules
          key: v3-dependencies-{{ arch }}-{{ checksum "package-lock.json" }}
      - run:
          name: prepare test git user
          command: git config --global user.email "circleci@example.com" && git config
            --global user.name "CircleCi Build"
      - run:
          name: Configure Environment
          command: echo -e "LOG_LEVEL=info\nAZURE_ONEDRIVE_CLIENT_ID=$AZURE_ONEDRIVE_CLIENT_ID\nAZURE_ONEDRIVE_CLIENT_SECRET=$AZURE_ONEDRIVE_CLIENT_SECRET\nAZURE_ONEDRIVE_REFRESH_TOKEN=$AZURE_ONEDRIVE_REFRESH_TOKEN\nAZURE_ONEDRIVE_ADMIN_LINK=$AZURE_ONEDRIVE_ADMIN_LINK\nCORALOGIX_API_KEY=$CORALOGIX_API_KEY\nCORALOGIX_LOG_LEVEL=$CORALOGIX_LOG_LEVEL\nOPENWHISK_API_KEY=$OPENWHISK_API_KEY\nOPENWHISK_API_HOST=$OPENWHISK_API_HOST\n" > .env

jobs:
  build:
    executor: node10
    steps:
      - setup
      - run: mkdir junit
      - run:
          name: Lint
          command: npm run lint
      # - run:
      #     name: Getting Code Coverage
      #     command: npm run test-ci
      - store_test_results:
          path: junit
      - store_artifacts:
          path: junit

  semantic-release:
    executor: node10
    steps:
      - setup
      - run:
          name: revert changes to package-lock.json
          command: git checkout -- package-lock.json
      - run:
          name: Semantic Release
          command: env WSK_AUTH=$OPENWHISK_API_KEY npm run semantic-release
      - run:
          name: Post-Deployment Integration Test
          command: npm run test-postdeploy
      - store_test_results:
          path: junit
      # the env is to override the WSK_AUTH env variable provided by the Project Helix context
      - run:
          name: Link Sequences
          command: env WSK_AUTH=$OPENWHISK_API_KEY npm run deploy-sequences
      # uncomment and adjust to enable monitoring
      # see https://circleci.com/orbs/registry/orb/adobe/helix-post-deploy
      # for more available parameters
      # - helix-post-deploy/monitoring:
      #     statuspage_name: Helix TheBlog Scanner
      #     statuspage_group: Development
      #     newrelic_group_policy: Development Repeated Failure

  branch-deploy:
    executor: node10
    steps:
      - setup
      - run:
          name: revert changes to package-lock.json
          command: git checkout -- package-lock.json
      - run:
          name: Branch Deployment
          command: env WSK_AUTH=$OPENWHISK_API_KEY npm run deploy-ci
      - run:
          name: Post-Deployment Integration Test
          command: npm run test-postdeploy
      - store_test_results:
          path: junit

workflows:
  version: 2
  build:
    jobs:
      - build
      - branch-deploy:
          context: Project Helix
          requires:
            - build
          filters:
            branches:
              ignore: master
      - semantic-release:
          context: Project Helix
          requires:
            - build
          filters:
            branches:
              only: master
